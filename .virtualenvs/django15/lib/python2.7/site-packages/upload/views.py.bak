# -*- coding: utf-8 -*-
import sys

from django.shortcuts import render_to_response
from django.template import RequestContext
from django.http import HttpResponseRedirect
from django.core.urlresolvers import reverse
#from django.forms import forms
from django.conf import settings
#from django.core.exceptions import ValidationError
from django.contrib import messages
#from django.utils.translation import ugettext_lazy as _

from fitsapp.upload.models import Document
from fitsapp.upload.forms import DocumentForm

def upload(request):
    # Handle file upload
    if request.method == 'POST':
        form = DocumentForm(request.POST, request.FILES)
        if form.is_valid() and request.FILES['docfile'].name.lower().endswith(('.xml', '.utree')):

            #blob = request.FILES['docfile'].read()
            #docsize = len(blob)

            if sys.getsizeof(request.FILES['docfile']) > settings.FILE_UPLOAD_MAX_MEMORY_SIZE:
                messages.error(request, 'File size is too big.')
            else:
                newdoc = Document(docfile = request.FILES['docfile'])
                newdoc.save()

        else:
            messages.error(request, 'File type is not supported.')
            #raise forms.ValidationError(_('File type is not supported'))

        # Redirect to the document list after POST
        return HttpResponseRedirect(reverse('fitsapp.upload.views.upload'))

    else:
        form = DocumentForm() # A empty, unbound form

    # Load documents for the list page
    documents = Document.objects.all()

    # Render list page with the documents and the form
    return render_to_response(
        'upload/list.html',
        {'documents': documents, 'form': form},
        context_instance=RequestContext(request)
    )
